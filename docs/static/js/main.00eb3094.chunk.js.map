{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/login/LoginScreen.jsx","components/login/RegisterScreen.jsx","data/heroes.js","components/heroes/HeroCard.jsx","components/heroes/HeroList.jsx","selectors/getHeroesByPublisher.js","components/dc/DcScreen.jsx","components/heroes/HeroScreen.jsx","selectors/getHeroById.js","components/marvel/MarvelScreen.jsx","components/search/SearchScreen.jsx","selectors/getHeroesByName.js","components/ui/Navbar.jsx","routers/DashboardRouter.jsx","routers/PrivateRoutes.js","routers/PublicRoutes.js","routers/AppRouter.jsx","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","HeroesApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","startLoginWithEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","checked","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","htmlFor","id","onChange","autoComplete","required","disabled","onClick","signInWithPopup","to","RegisterScreen","msgError","password2","terms","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPassword","role","heroes","HeroCard","superhero","alter_ego","first_appearance","publisher","characters","src","alt","HeroList","useMemo","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroId","useParams","navigate","useNavigate","find","getHeroById","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","searchText","toLowerCase","includes","getHeroesByName","placeholder","Navbar","isActive","signOut","DashboardRouter","path","element","PrivateRoutes","children","isLogged","pathname","localStorage","setItem","PublicRoutes","lastPath","AppRouter","setIsLogged","isNotReady","setisNotReady","getItem","useEffect","onAuthStateChanged","style","width","height","reducers","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","HeroesApp","ReactDOM","render","document","getElementById"],"mappings":"6OAuBEA,IAASC,cAlBY,CAEnBC,OAAQ,0CAERC,WAAY,4CAEZC,UAAW,4BAEXC,cAAe,wCAEfC,kBAAmB,eAEnBC,MAAO,8CAQEP,IAASQ,YAApB,IAEMC,EAAqB,IAAIT,IAASU,KAAKC,mBC3BlCC,EACF,eADEA,EAED,gBAFCA,EAKG,iBALHA,EAMM,oBANNA,EASO,qBATPA,EAUQ,qBCRRC,EAAW,SAACC,GACrB,MAAM,CACFC,KAAMH,EACNI,QAASF,IAgBJG,EAAgB,WACzB,MAAM,CACFF,KAAMH,IClBDM,EAA8B,SAACC,EAAOC,GAC/C,OAAO,SAACC,GACJA,EDSE,CACFN,KAAMH,ICTPZ,IAASU,OAAOY,2BAA2BH,EAAOC,GAChDG,MAAK,YAAiB,IAAbC,EAAY,EAAZA,KACNH,EAAUI,EAAOD,EAAKE,IAAKF,EAAKG,cAChCN,EAAUJ,QAEbW,OAAO,SAAAC,GACJC,QAAQC,IAAIF,GACZR,EAAUJ,UAoCTQ,EAAQ,SAACC,EAAKC,GACvB,MAAO,CACHZ,KAAMH,EACNI,QAAS,CACLU,MACAC,iBAcNK,EAAS,WACX,MAAQ,CACJjB,KAAMH,I,gCCrEDqB,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAWH,IAITK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEN,aAAhBA,EAAOzB,KAENsB,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,WAI5BL,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOG,UAKpC,MAAO,CAAEP,EAAQG,EAAmBD,I,OCmEzBM,EArFK,WAEhB,IAAMvB,EAAWwB,cACTC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAvCH,QAER,EAAwCb,EAAQ,CAC5Cd,MAAO,mBACPC,SAAU,WAFd,mBAAO8B,EAAP,KAAmBX,EAAnB,KAKQpB,EAAoB+B,EAApB/B,MAAOC,EAAa8B,EAAb9B,SAaf,OACI,sBAAK+B,UAAU,iBAAf,UACI,8CACA,uBAEA,uBAAMC,SAhBM,SAACvB,GACjBA,EAAEwB,iBAEFhC,EAAUH,EAA6BC,EAAOC,KAa1C,UACI,sBAAK+B,UAAU,OAAf,UACI,uBAAOG,QAAQ,qBAAqBH,UAAU,aAA9C,2BACA,uBACIpC,KAAK,QACLoC,UAAU,eACVI,GAAG,qBACH,mBAAiB,YACjBd,KAAK,QACLE,MAAQxB,EACRqC,SAAWjB,EACXkB,aAAa,MACbC,UAAQ,IAEZ,qBAAKH,GAAG,YAAYJ,UAAU,YAA9B,+DAEJ,sBAAKA,UAAU,OAAf,UACI,uBAAOG,QAAQ,wBAAwBH,UAAU,aAAjD,sBACA,uBACIpC,KAAK,WACLoC,UAAU,eACVI,GAAG,wBACHd,KAAK,WACLE,MAAQvB,EACRoC,SAAWjB,EACXkB,aAAa,MACbC,UAAQ,OAIhB,wBACI3C,KAAK,SACLoC,UAAU,gCACVQ,SAAYb,EAHhB,8CAQJ,sBAAKK,UAAU,OAAf,UACI,mCAEA,cAAC,IAAD,CAAcS,QAnDA,WACtB9B,QAAQC,IAAI,qBACZV,GFSG,SAACA,GACJrB,IAASU,OAAOmD,gBAAgBpD,GAC3Bc,MAAM,gBAAGC,EAAH,EAAGA,KAAH,OACHH,EAAUI,EAAMD,EAAKE,IAAKF,EAAKG,iBAElCC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,YEoCZ,uBACA,cAAC,IAAD,CAAMiC,GAAG,YAAT,wC,iBC2EDC,EApJQ,WAEnB,IAAM1C,EAAWwB,cACTmB,EAAajB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAxCe,SAER,EAAwC/B,EAAQ,CAC5CQ,KAAM,YACNtB,MAAO,mBACPC,SAAU,SACV6C,UAAW,SACXC,OAAO,IALX,mBAAOhB,EAAP,KAAmBX,EAAnB,KAQQE,EAA4CS,EAA5CT,KAAMtB,EAAsC+B,EAAtC/B,MAAOC,EAA+B8B,EAA/B9B,SAAU6C,EAAqBf,EAArBe,UAAWC,EAAUhB,EAAVgB,MAEpCC,EAAc,WAEhB,GAAG1B,EAAK2B,OAAOC,OAAS,EAEpBhD,EAAUR,EAAS,qDAGvB,GAAIO,EAASiD,OAAS,GAAKjD,IAAa6C,EAEpC5C,EAAUR,EAAS,0EAGvB,GAAIqD,EAAJ,CAMA,GAAKI,IAAUC,QAAQpD,GAQvB,OADAE,EJxCE,CACFN,KAAMH,KIwCC,EANHS,EAAUR,EAAS,kCANnBQ,EAAUR,EAAS,iDAyB3B,OACI,sBAAKsC,UAAU,iBAAf,UACI,iDACA,uBAEA,uBAAMC,SAfS,SAACvB,GACpBA,EAAEwB,iBAEEc,MAEArC,QAAQC,IAAIU,EAAMtB,EAAOC,EAAU6C,EAAWC,GAC9C7C,EHvCkC,SAACF,EAAOC,EAAUqB,GAC5D,OAAM,SAACpB,GACHrB,IAASU,OAAO8D,+BAA+BrD,EAAOC,GACjDG,KADL,uCACW,6BAAAkD,EAAA,6DAASjD,EAAT,EAASA,KAAT,SACGA,EAAKkD,cAAc,CACrB/C,YAAac,IAFd,OAKHpB,EAASI,EAAOD,EAAKE,IAAKF,EAAKG,cAL5B,2CADX,uDAQKC,OAAO,SAAAC,GACJC,QAAQC,IAAIF,OG4BN8C,CAA+BxD,EAAOC,EAAUqB,MAS1D,UAEQuB,GACI,qBAAKb,UAAU,qBAAqByB,KAAK,QAAzC,SACMZ,IAId,sBAAKb,UAAU,OAAf,UACI,uBAAOG,QAAQ,mBAAmBH,UAAU,aAA5C,kBACA,uBACIpC,KAAK,OACLoC,UAAU,eACVI,GAAG,mBACHd,KAAK,OACLE,MAAQF,EACRe,SAAWjB,EACXkB,aAAa,MACbC,UAAQ,OAGhB,sBAAKP,UAAU,OAAf,UACI,uBAAOG,QAAQ,qBAAqBH,UAAU,aAA9C,2BACA,uBACIpC,KAAK,QACLoC,UAAU,eACVI,GAAG,qBACH,mBAAiB,YACjBd,KAAK,QACLE,MAAQxB,EACRqC,SAAWjB,EACXkB,aAAa,MACbC,UAAQ,IAEZ,qBAAKH,GAAG,YAAYJ,UAAU,YAA9B,+DAEJ,sBAAKA,UAAU,OAAf,UACI,uBAAOG,QAAQ,wBAAwBH,UAAU,aAAjD,sBACA,uBACIpC,KAAK,WACLoC,UAAU,eACVI,GAAG,wBACHd,KAAK,WACLE,MAAQvB,EACRoC,SAAWjB,EACXkB,aAAa,MACbC,UAAQ,OAGhB,sBAAKP,UAAU,OAAf,UACI,uBAAOG,QAAQ,wBAAwBH,UAAU,aAAjD,8BACA,uBACIpC,KAAK,WACLoC,UAAU,eACVI,GAAG,wBACHd,KAAK,YACLE,MAAQsB,EACRT,SAAWjB,EACXkB,aAAa,MACbC,UAAQ,OAGhB,sBAAKP,UAAU,kBAAf,UACI,uBACIpC,KAAK,WACLoC,UAAU,mBACVI,GAAG,gBACHd,KAAK,QACLC,QAAUwB,EAEVV,SAAWjB,IAGf,uBAAOY,UAAU,mBAAmBG,QAAQ,gBAA5C,8CAGJ,wBAAQvC,KAAK,SAASoC,UAAU,gCAAhC,+BAEJ,sBAAKA,UAAU,OAAf,UACI,mCAEA,uBACA,cAAC,IAAD,CAAMW,GAAG,SAAT,uDCvJHe,EAAS,CAClB,CACI,GAAM,YACN,UAAY,SACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,uBACnB,WAAa,eAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,YACZ,UAAY,SACZ,iBAAmB,mBACnB,WAAa,UAEjB,CACI,GAAM,WACN,UAAY,QACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,kBACnB,WAAa,oDAEjB,CACI,GAAM,WACN,UAAY,gBACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,0BACnB,WAAa,6FAEjB,CACI,GAAM,WACN,UAAY,cACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,YACN,UAAY,eACZ,UAAY,YACZ,UAAY,iBACZ,iBAAmB,qBACnB,WAAa,kBAEjB,CACI,GAAM,aACN,UAAY,oBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,wBACnB,WAAa,qBAEjB,CACI,GAAM,WACN,UAAY,kBACZ,UAAY,YACZ,UAAY,eACZ,iBAAmB,uBACnB,WAAa,gBAEjB,CACI,GAAM,UACN,UAAY,cACZ,UAAY,YACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,qCAEjB,CACI,GAAM,WACN,UAAY,eACZ,UAAY,YACZ,UAAY,cACZ,iBAAmB,mBACnB,WAAa,4BAEjB,CACI,GAAM,gBACN,UAAY,aACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,sBACnB,WAAa,gBAEjB,CACI,GAAM,iBACN,UAAY,kBACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,4BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,WACZ,UAAY,gBACZ,UAAY,aACZ,iBAAmB,wBACnB,WAAa,cAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,0BACnB,WAAa,gBAEjB,CACI,GAAM,cACN,UAAY,OACZ,UAAY,gBACZ,UAAY,eACZ,iBAAmB,yBACnB,WAAa,gBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,2BACnB,WAAa,iBAEjB,CACI,GAAM,mBACN,UAAY,YACZ,UAAY,gBACZ,UAAY,0BACZ,iBAAmB,eACnB,WAAa,2BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,yBACZ,iBAAmB,wBACnB,WAAa,0BAEjB,CACI,GAAM,iBACN,UAAY,UACZ,UAAY,gBACZ,UAAY,gBACZ,iBAAmB,WACnB,WAAa,iBAEjB,CACI,GAAM,gBACN,UAAY,gBACZ,UAAY,gBACZ,UAAY,cACZ,iBAAmB,yBACnB,WAAa,gBClINC,EA1BE,SAAC,GAA2E,IAAzEvB,EAAwE,EAAxEA,GAAIwB,EAAoE,EAApEA,UAAWC,EAAyD,EAAzDA,UAAsBC,GAAmC,EAA9CC,UAA8C,EAAnCD,kBAAkBE,EAAiB,EAAjBA,WACvE,OACI,qBAAKhC,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKiC,IAAG,kBAAa7B,EAAb,QAAuBJ,UAAU,eAAekC,IAAKN,IAC7D,sBAAK5B,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,cAA6B4B,EAA7B,OACA,qBAAI5B,UAAU,8BAAd,UACI,oBAAIA,UAAU,kBAAd,SAAiC6B,IACjC,oBAAI7B,UAAU,kBAAd,SAAiC8B,IACjC,oBAAI9B,UAAU,kBAAd,SAAiCgC,UAGzC,qBAAKhC,UAAU,cAAf,SACI,uBAAOA,UAAU,aAAjB,SACI,cAAC,IAAD,CACIW,GAAE,gBAAWP,GADjB,qCCIT+B,EAlBE,SAAC,GAAmB,IAAjBJ,EAAgB,EAAhBA,UAGVL,EAASU,mBAAQ,kBCLS,SAACL,GAEjC,OAAOL,EAAOW,QAAO,SAAAC,GAAI,OAAIA,EAAKP,YAAcA,KDGnBQ,CAAqBR,KAAY,CAACA,IAE/D,OACQ,qBAAK/B,UAAU,iDAAf,SAEQ0B,EAAOc,KAAI,SAAAF,GACP,OACI,cAAC,EAAD,eAA4BA,GAAbA,EAAKlC,UEDjCqC,EAVE,WACb,OACI,gCACI,2CACA,uBACA,cAAC,EAAD,CAAUV,UAAU,kBC4CjBW,EAhDI,WAEnB,IAAQC,EAAWC,cAAXD,OACFE,EAAWC,cAGXR,EAAOF,mBAAQ,kBCRM,SAAChC,GAExB,OAAOsB,EAAOqB,MAAK,SAAAT,GAAI,OAAIA,EAAKlC,KAAOA,KDMhB4C,CAAYL,KAAS,CAACA,IAEjD,IAAIL,EACA,OAAO,cAAC,IAAD,CAAU3B,GAAG,YAExB,IAAQP,EAAsEkC,EAAtElC,GAAIwB,EAAkEU,EAAlEV,UAAWC,EAAuDS,EAAvDT,UAAWE,EAA4CO,EAA5CP,UAAWD,EAAiCQ,EAAjCR,iBAAkBE,EAAeM,EAAfN,WAM3D,OACI,gCACI,6BAAMD,IACN,uBACA,qBAAK/B,UAAU,QAAf,SAGA,sBAAKA,UAAU,aAAf,UACI,qBAAKiC,IAAG,kBAAa7B,EAAb,QAAuBJ,UAAU,eAAekC,IAAKN,IAC7D,sBAAK5B,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,cAA6B4B,EAA7B,OACA,qBAAI5B,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UAAgC,4CAAhC,KAAqD6B,KACrD,qBAAI7B,UAAU,kBAAd,UAAgC,mDAAhC,IAA2D8B,KAC3D,qBAAI9B,UAAU,kBAAd,cAAiC,4CAAjC,IAAqDgC,WAG7D,qBAAKhC,UAAU,uBAAf,SACI,wBACIA,UAAU,kBACVS,QAxBJ,WAChBoC,GAAU,IAqBM,iCEzBLI,EAXM,WACjB,OACI,gCACI,+CACA,uBACA,cAAC,EAAD,CAAUlB,UAAU,sB,iBCuEjBmB,EAxEM,WAEjB,IAAML,EAAWC,cACXK,EAAWC,cAEjB,EAAiBC,IAAYC,MAAMH,EAASI,QAArCC,SAAP,MAAW,GAAX,EAEA,EAAwC1E,EAAQ,CAC5C2E,WAAYD,IADhB,mBAAOzD,EAAP,KAAmBX,EAAnB,KAIQqE,EAAe1D,EAAf0D,WAOF/B,EAASU,mBAAQ,kBCvBI,WAAgB,IAAf9C,EAAc,uDAAP,GAEnC,OAAmB,IAAhBA,EAAK4B,OACG,IAGX5B,EAAOA,EAAKoE,cACLhC,EAAOW,QAAO,SAAAC,GAAI,OAAIA,EAAKV,UAAU8B,cAAcC,SAASrE,ODgBtCsE,CAAgBJ,KAAI,CAACA,IAGlD,OACI,gCACI,+CACA,uBAEA,sBAAKxD,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UACI,iDAIA,uBAAMC,SAnBD,SAACvB,GAClBA,EAAEwB,iBACF2C,EAAS,MAAD,OAAOY,KAiBH,UACI,uBACI7F,KAAK,OACLiG,YAAY,+BACZ7D,UAAU,eACVV,KAAK,aACLe,SAAWjB,EACXI,MAAQiE,EACRnD,aAAa,QAIjB,wBACIN,UAAU,uBACVpC,KAAK,SAFT,0BASR,sBAAKoC,UAAU,QAAf,UACI,4CAMI0B,EAAOc,KAAI,SAAAF,GAAI,OACX,cAAC,EAAD,eACIA,GADWA,EAAKlC,iBEDjC0D,EA9DA,WAEX,IAAQxE,EAASM,aAAY,SAAAC,GAAK,OAAIA,EAAMtC,QAApC+B,KACFpB,EAAWwB,cAMjB,OACI,qBAAKM,UAAU,8CAAf,SACI,sBAAKA,UAAU,kBAAf,UAEI,cAAC,IAAD,CACIA,UAAU,eACVW,GAAG,IAFP,wBAOA,qBAAKX,UAAU,2BAA2BI,GAAG,YAA7C,SACI,sBAAKJ,UAAU,aAAf,UAEI,cAAC,IAAD,CACIA,UAAY,kBAAkB,sBAAlB,EAAG+D,SAAiD,SAAW,KAC3EpD,GAAG,UAFP,oBAMA,cAAC,IAAD,CACIX,UAAY,kBAAkB,sBAAlB,EAAG+D,SAAiD,SAAW,KAC3EpD,GAAG,MAFP,gBAMA,cAAC,IAAD,CACIX,UAAY,kBAAkB,sBAAlB,EAAG+D,SAAiD,SAAW,KAC3EpD,GAAG,UAFP,yBASR,qBAAKX,UAAU,mFAAf,SACI,qBAAIA,UAAU,qBAAd,UACI,sBAAMA,UAAU,8BAAhB,SACMV,IAEN,wBACIU,UAAU,wBACVS,QA9CH,WACjBvC,EdoDJ,uCAAS,WAAMA,GAAN,SAAAoD,EAAA,sEACCzE,IAASU,OAAOyG,UADjB,OAGL9F,EAAUW,KAHL,2CAAT,wDcToB,+BC3BToF,EAnBS,WACpB,OACI,qCACI,cAAC,EAAD,IACA,qBAAKjE,UAAU,iBAAf,SAEA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOkE,KAAK,KAAKC,QAAS,cAAC,EAAD,MAC1B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,EAAD,MAEpC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eCL1BC,EAZO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAE/B,EAA6BlB,cAArBmB,EAAR,EAAQA,SAAUhB,EAAlB,EAAkBA,OAKlB,OAHAiB,aAAaC,QAAQ,WAAYF,EAAWhB,GAGrCe,EACLD,EACA,cAAC,IAAD,CAAU1D,GAAG,YCDJ+D,EARM,SAAC,GAAsC,IAApCL,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAUK,EAAe,EAAfA,SAGxC,OAAOL,EACL,cAAC,IAAD,CAAU3D,GAAIgE,IACdN,GCyDSO,EArDG,WAEd,IAAM1G,EAAWwB,cACjB,EAAgCV,oBAAS,GAAzC,mBAAOsF,EAAP,KAAiBO,EAAjB,KACA,EAAoC7F,oBAAS,GAA7C,mBAAO8F,EAAP,KAAmBC,EAAnB,KAEMJ,EAAWH,aAAaQ,QAAQ,aAAe,UAerD,OAbAC,qBAAU,WACNpI,IAASU,OAAO2H,oBAAoB,SAAE7G,IAClC,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAME,MACNsG,GAAY,GACZ3G,EAAUI,EAAMD,EAAKE,IAAKF,EAAKG,eAE/BqG,GAAY,GAEhBE,GAAc,QAGnB,CAAC7G,IAED4G,EAEK,qBAAK9E,UAAU,qCAAf,SACI,qBAAKA,UAAU,4BAA4BmF,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAAS5D,KAAK,SAAxF,SACI,sBAAMzB,UAAU,kBAAhB,4BAOZ,cAAC,IAAD,UACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOkE,KAAK,SAASC,QACjB,cAAC,EAAD,CAAcG,SAAWA,EAAWK,SAAWA,EAA/C,SACI,cAAC,EAAD,QAIR,cAAC,IAAD,CAAOT,KAAK,YAAYC,QAAU,cAAC,EAAD,MAElC,cAAC,IAAD,CAAOD,KAAK,KAAKC,QACb,cAAC,EAAD,CAAeG,SAAWA,EAA1B,SACI,cAAC,EAAD,c,gBCvDlBvF,EAAe,CACjBY,SAAU,EACVkB,SAAU,MCCRyE,EAAWC,YAAgB,CAC7BhI,KCEuB,WAAwB,IAAvBsC,EAAsB,uDAAf,GAAI2F,EAAW,uCAC9C,OAAQA,EAAO5H,MACX,KAAKH,EACD,MAAM,CACFc,IAAKiH,EAAO3H,QAAQU,IACpBe,KAAMkG,EAAO3H,QAAQW,aAE7B,KAAKf,EACD,MAAM,GAGV,QACI,OAAOoC,IDbfC,GDAqB,WAAqC,IAAnCD,EAAkC,uDAA1Bd,EAAcyG,EAAY,uCACzD,OAAQA,EAAO5H,MACX,KAAKH,EACD,kCACOoC,GADP,IAEIgB,SAAU2E,EAAO3H,UAGzB,KAAKJ,EACD,kCACOoC,GADP,IAEIgB,SAAU,OAGlB,KAAKpD,EACD,kCACOoC,GADP,IAEIF,SAAS,IAGjB,KAAKlC,EACD,kCACOoC,GADP,IAEIF,SAAS,IAGjB,QACI,OAAOE,MCxBb4F,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,GAAQC,YACjBR,EACAG,GAAkBM,YAAiBC,OECxBC,GATG,WAEd,OACI,cAAC,IAAD,CAAUJ,MAAQA,GAAlB,SACI,cAAC,EAAD,O,OCLZK,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.00eb3094.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\n\r\nconst firebaseConfig = {\r\n\r\n    apiKey: \"AIzaSyBNun5b_wQ_r4dE57z4qq5rvpg05faCEog\",\r\n  \r\n    authDomain: \"react-auth-firebase-f6ebf.firebaseapp.com\",\r\n  \r\n    projectId: \"react-auth-firebase-f6ebf\",\r\n  \r\n    storageBucket: \"react-auth-firebase-f6ebf.appspot.com\",\r\n  \r\n    messagingSenderId: \"754356365094\",\r\n  \r\n    appId: \"1:754356365094:web:d3dc60d7f496d1ab32c3e7\"\r\n  \r\n  };\r\n  \r\n  // Initialize Firebase\r\n  \r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  \r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\n  export{\r\n      firebase,\r\n      db,\r\n      googleAuthProvider\r\n  }","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n\r\n    uiSetError: '[UI] Set error',\r\n    uiRemoveError: '[UI] Remove Error' ,\r\n\r\n    \r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finis Loading' \r\n}","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) => {\r\n    return{\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return{\r\n        type: types.uiSetError,\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n    return{\r\n        type: types.uiStartLoading,\r\n    }\r\n}\r\n\r\nexport const finishLoading = () => {\r\n    return{\r\n        type: types.uiFinishLoading,\r\n    }\r\n}","import { googleAuthProvider, firebase } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\"\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\n\r\nexport const startLoginWithEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch( startLoading() )\r\n       firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(( { user } ) => {\r\n            dispatch( login( user.uid, user.displayName) );\r\n            dispatch( finishLoading() );\r\n        })\r\n        .catch( e => {\r\n            console.log(e);\r\n            dispatch( finishLoading() );\r\n        } )\r\n    }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPassword = (email, password, name) => {\r\n    return(dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async ({ user }) =>{\r\n                await user.updateProfile({\r\n                    displayName: name\r\n                })\r\n\r\n                dispatch(login( user.uid, user.displayName ));\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n            } )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch)=>{\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({ user }) => \r\n                dispatch( login(user.uid, user.displayName) )\r\n            )\r\n            .catch(e => { \r\n                console.log(e) \r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const startLogout = () =>{\r\n    return ( async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() )\r\n    } )\r\n}\r\n\r\nconst logout = () => {\r\n    return ({\r\n        type: types.logout\r\n    })\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        if(target.type === 'checkbox')\r\n        {\r\n            setValues({\r\n                ...values,\r\n                [ target.name ]: target.checked\r\n            });\r\n\r\n        } else {\r\n            setValues({\r\n                ...values,\r\n                [ target.name ]: target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import { AuthContext } from '../../auth/authContext'\r\n// import { types } from '../../types/types'\r\nimport GoogleButton from 'react-google-button'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startGoogleLogin, startLoginWithEmailPassword } from '../../actions/auth'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'prueba@gmail.com',\r\n        password: '123456',\r\n    })\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        // console.log(email, password);\r\n        dispatch( startLoginWithEmailPassword( email, password ) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        console.log('Google Login TODO');\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login Screen</h1>\r\n            <hr />\r\n\r\n            <form onSubmit={ handleLogin }>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                    <input \r\n                        type=\"email\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputEmail1\" \r\n                        aria-describedby=\"emailHelp\"\r\n                        name=\"email\"\r\n                        value={ email }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required \r\n                    />\r\n                    <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputPassword1\" \r\n                        name=\"password\"\r\n                        value={ password }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required \r\n                    />\r\n                </div>\r\n\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-outline-primary w-100\"\r\n                    disabled= { loading }\r\n                >\r\n                    Login with email and password\r\n                </button>\r\n            </form>\r\n            <div className=\"mt-3\">\r\n                <p>or</p>\r\n                \r\n                <GoogleButton onClick={ handleGoogleLogin } />\r\n                \r\n                <hr />\r\n                <Link to=\"/register\"> Register new user </Link>\r\n            </div>\r\n\r\n            {/* <button \r\n                className=\"btn btn-primary\"\r\n                onClick={ handleLogin }    \r\n            >\r\n                Login\r\n            </button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\nimport { startRegisterWithEmailPassword } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { msgError } = useSelector(state => state.ui)\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Andrés',\r\n        email: 'prueba@gmail.com',\r\n        password: '123456',\r\n        password2: '123456',\r\n        terms: true,\r\n    })\r\n\r\n    const { name, email, password, password2, terms } = formValues;\r\n\r\n    const isFormValid = () => {\r\n\r\n        if(name.trim().length < 2){\r\n            // console.log('El nombre debe tener más de 2 caracteres');\r\n            dispatch( setError('El nombre debe tener más de 2 caracteres') )\r\n            return\r\n        }\r\n        if( password.length < 6 || password !== password2){\r\n            // console.log('Las contraseñas deben coincidir y tener al menos 6 caracteres')\r\n            dispatch( setError('Las contraseñas deben coincidir y tener al menos 6 caracteres') )\r\n            return\r\n        }\r\n        if(!terms){\r\n            // console.log('Debe aceptar los términos para continuar')\r\n            dispatch( setError('Debe aceptar los términos para continuar') )\r\n            \r\n            return\r\n        }\r\n        if( !validator.isEmail(email) ){\r\n            // console.log('El email no es válido')\r\n            dispatch( setError('El email no es válido') )\r\n\r\n            return\r\n        }\r\n\r\n        dispatch( removeError() )\r\n        return true;\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid() ){\r\n\r\n            console.log(name, email, password, password2, terms);\r\n            dispatch( startRegisterWithEmailPassword(email, password, name) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Register Screen</h1>\r\n            <hr />\r\n\r\n            <form onSubmit={ handleRegister }>\r\n                {\r\n                    msgError && (\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            { msgError }\r\n                        </div>\r\n                        )\r\n                }\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputName\" className=\"form-label\">Name</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputName\" \r\n                        name=\"name\"\r\n                        value={ name }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n                    <input \r\n                        type=\"email\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputEmail1\" \r\n                        aria-describedby=\"emailHelp\"\r\n                        name=\"email\"\r\n                        value={ email }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required \r\n                    />\r\n                    <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputPassword1\" \r\n                        name=\"password\"\r\n                        value={ password }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword2\" className=\"form-label\">Confirm Password</label>\r\n                    <input \r\n                        type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"exampleInputPassword2\" \r\n                        name=\"password2\"\r\n                        value={ password2 }\r\n                        onChange={ handleInputChange }\r\n                        autoComplete=\"off\"\r\n                        required \r\n                    />\r\n                </div>\r\n                <div className=\"mb-3 form-check\">\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        className=\"form-check-input\" \r\n                        id=\"invalidCheck2\"\r\n                        name=\"terms\"\r\n                        checked={ terms }\r\n                        // value=\"\"\r\n                        onChange={ handleInputChange }\r\n                        \r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"invalidCheck2\">Agree to terms and conditions</label>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-outline-primary w-100\">Create account</button>\r\n            </form>\r\n            <div className=\"mt-3\">\r\n                <p>or</p>\r\n                \r\n                <hr />\r\n                <Link to=\"/login\"> Already have an account? Sign in </Link>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HeroCard = ({ id, superhero, alter_ego, publisher, first_appearance, characters }) => {\r\n    return (\r\n        <div className=\"col\">\r\n            <div className=\"card h-100\">\r\n                <img src={`/assets/${id}.jpg`} className=\"card-img-top\" alt={superhero} />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\"> {superhero} </h5>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\">{alter_ego}</li>\r\n                        <li className=\"list-group-item\">{first_appearance}</li>\r\n                        <li className=\"list-group-item\">{characters}</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <small className=\"text-muted\">\r\n                        <Link\r\n                            to={`/hero/${id}`}>\r\n                            Ver más...\r\n                        </Link>\r\n                    </small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroCard\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport HeroCard from './HeroCard'\r\n\r\nconst HeroList = ({ publisher }) => {\r\n\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher])\r\n\r\n    return (\r\n            <div className=\"row row-cols-1 row-cols-sm-3 row-cols-md-4 g-4\">\r\n                {\r\n                    heroes.map(hero => {\r\n                        return (\r\n                            <HeroCard key={hero.id} {...hero}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default HeroList\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n\r\n}","import React from 'react'\r\nimport HeroList from '../heroes/HeroList'\r\n\r\nconst DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n            <HeroList publisher='DC Comics' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DcScreen\r\n","import React, { useMemo } from 'react'\r\nimport { useParams, useNavigate, Navigate } from 'react-router-dom'\r\nimport { getHeroById } from '../../selectors/getHeroById'\r\n\r\nconst HeroScreen = () => {\r\n\r\nconst { heroId } = useParams();\r\nconst navigate = useNavigate();\r\n\r\n\r\nconst hero = useMemo(() => getHeroById(heroId), [heroId]);\r\n\r\nif(!hero){\r\n    return <Navigate to='/marvel' />;\r\n}\r\nconst { id, superhero, alter_ego, publisher, first_appearance, characters } = hero;\r\n\r\nconst handleReturn= () => {\r\n    navigate(-1);\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <h1>{ publisher }</h1>\r\n            <hr />\r\n            <div className=\"col-3\">\r\n\r\n            \r\n            <div className=\"card h-100\">\r\n                <img src={`/assets/${id}.jpg`} className=\"card-img-top\" alt={superhero} />\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title\"> {superhero} </h3>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\"><b>Alter ego: </b>  {alter_ego}</li>\r\n                        <li className=\"list-group-item\"><b>First appearance: </b> {first_appearance}</li>\r\n                        <li className=\"list-group-item\"> <b>Character: </b> {characters}</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"card-footer text-end\">\r\n                    <button \r\n                        className=\"btn btn-primary\"\r\n                        onClick={ handleReturn }    \r\n                    >\r\n                        Regresar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroScreen\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroById = (id) => {\r\n\r\n    return heroes.find(hero => hero.id === id);\r\n\r\n}","import React from 'react'\r\nimport HeroList from '../heroes/HeroList'\r\n\r\nconst MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n            <HeroList publisher='Marvel Comics' />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarvelScreen\r\n","import React, { useMemo } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport queryString from 'query-string'; \r\nimport { useForm } from '../../hooks/useForm';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\nimport HeroCard from '../heroes/HeroCard';\r\n\r\nconst SearchScreen = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const {q = ''} = queryString.parse(location.search);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchText: q\r\n    })\r\n\r\n    const { searchText } = formValues;\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        navigate(`?q=${searchText}`);\r\n    }\r\n\r\n    const heroes = useMemo(() => getHeroesByName(q), [q]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h3>\r\n                        Buscar héroe\r\n                    </h3>\r\n\r\n                    <form onSubmit={ handleSubmit }>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder=\"Ingrese un héroe a buscar\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            onChange={ handleInputChange }\r\n                            value={ searchText }\r\n                            autoComplete=\"off\"\r\n\r\n                        />\r\n\r\n                        <button \r\n                            className=\"btn btn-primary mt-3\"\r\n                            type=\"submit\"    \r\n                        >\r\n                            Buscar\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <h3>\r\n                        Resultados\r\n                    </h3>\r\n\r\n                    {\r\n\r\n                        heroes.map(hero => (\r\n                            <HeroCard key={hero.id}\r\n                            {...hero} />\r\n                        )\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchScreen\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByName = (name = '') => {\r\n\r\n    if(name.length === 0){\r\n        return [];\r\n    }\r\n\r\n    name = name.toLowerCase()\r\n    return heroes.filter(hero => hero.superhero.toLowerCase().includes(name));\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nconst Navbar = () => {\r\n    \r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n\r\n                <Link\r\n                    className=\"navbar-brand\"\r\n                    to=\"/\"    \r\n                >\r\n                    Heroes App\r\n                </Link>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <div className=\"navbar-nav\">\r\n                       \r\n                        <NavLink\r\n                            className={ ({ isActive }) => 'nav-item nav-link ' + (isActive? 'active' : '') }\r\n                            to=\"/marvel\"\r\n                        >\r\n                            Marvel\r\n                        </NavLink>\r\n                        <NavLink\r\n                            className={ ({ isActive }) => 'nav-item nav-link ' + (isActive? 'active' : '') }\r\n                            to=\"/dc\"\r\n                        >\r\n                            DC\r\n                        </NavLink>\r\n                        <NavLink\r\n                            className={ ({ isActive }) => 'nav-item nav-link ' + (isActive? 'active' : '') }\r\n                            to=\"/search\"\r\n                        >\r\n                            Search\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"nabvar-collapse collapse w-100 order-3 dual-collapse2 d-flex justify-content-end\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <span className=\"nav-item nav-link text-info\">\r\n                            { name }\r\n                        </span>\r\n                        <button \r\n                            className=\"nav-item nav-link btn\"\r\n                            onClick={handleLogout}\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport DcScreen from '../components/dc/DcScreen';\r\nimport HeroScreen from '../components/heroes/HeroScreen';\r\nimport MarvelScreen from '../components/marvel/MarvelScreen';\r\nimport SearchScreen from '../components/search/SearchScreen';\r\nimport Navbar from '../components/ui/Navbar'\r\n\r\nconst DashboardRouter = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container mt-5\">\r\n\r\n            <Routes>\r\n                <Route path=\"dc\" element={<DcScreen />} />\r\n                <Route path=\"marvel\" element={<MarvelScreen />} />\r\n                <Route path=\"search\" element={<SearchScreen />} />\r\n                <Route path=\"hero/:heroId\" element={<HeroScreen />} />\r\n                \r\n                <Route path=\"/\" element={<MarvelScreen />} />\r\n            </Routes>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DashboardRouter\r\n","import React from 'react'\r\nimport { Navigate, useLocation } from 'react-router-dom'\r\n\r\nconst PrivateRoutes = ({ children, isLogged }) => {\r\n\r\n    const { pathname, search } = useLocation();\r\n\r\n    localStorage.setItem('lastPath', pathname + search);\r\n\r\n\r\n    return isLogged\r\n    ? children\r\n    : <Navigate to=\"/login\" />\r\n}\r\n\r\nexport default PrivateRoutes\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nconst PublicRoutes = ({ children, isLogged, lastPath }) => {\r\n\r\n\r\n    return isLogged\r\n    ? <Navigate to={lastPath} />\r\n    : children\r\n}\r\n\r\nexport default PublicRoutes\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { login } from '../actions/auth';\r\nimport LoginScreen from '../components/login/LoginScreen';\r\nimport RegisterScreen from '../components/login/RegisterScreen';\r\nimport { firebase } from '../firebase/firebase-config'\r\nimport DashboardRouter from './DashboardRouter';\r\nimport PrivateRoutes from './PrivateRoutes';\r\nimport PublicRoutes from './PublicRoutes';\r\n\r\nconst AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isNotReady, setisNotReady] = useState(true)\r\n\r\n    const lastPath = localStorage.getItem('lastPath') || '/marvel';\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( ( user ) => {\r\n            if( user?.uid ){\r\n                setIsLogged(true);\r\n                dispatch( login(user.uid, user.displayName) )\r\n            } else {\r\n                setIsLogged(false);      \r\n            }\r\n            setisNotReady(false);\r\n        })\r\n\r\n    }, [dispatch])\r\n\r\n    if(isNotReady){\r\n        return(\r\n            <div className=\"d-flex justify-content-center mt-5\">\r\n                <div className=\"spinner-grow text-primary\" style={{width: '3rem', height: '3rem'}} role=\"status\">\r\n                    <span className=\"visually-hidden\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n\r\n                <Route path=\"/login\" element={ \r\n                    <PublicRoutes isLogged={ isLogged } lastPath={ lastPath } >\r\n                        <LoginScreen />\r\n                    </PublicRoutes>\r\n                     } />\r\n\r\n                <Route path=\"/register\" element={ <RegisterScreen /> } />\r\n\r\n                <Route path=\"/*\" element={\r\n                    <PrivateRoutes isLogged={ isLogged } >\r\n                        <DashboardRouter />\r\n                    </PrivateRoutes>\r\n                } />\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading : false,\r\n    msgError: null\r\n};\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n    \r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers( applyMiddleware( thunk ) )  \r\n)","import { types } from \"../types/types\";\r\n\r\n// state = {\r\n//     uid = 'sdf8s4b1f3b16wrfv8fev4',\r\n//     displayName = 'Daniel Andrés Duque'\r\n// }\r\n\r\n\r\nexport const authReducer = (state= {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n        case types.logout:\r\n            return{\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport AppRouter from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\n\r\nconst HeroesApp = () => {\r\n\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default HeroesApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HeroesApp from './HeroesApp';\nimport './index.css';\n\nReactDOM.render(\n  <HeroesApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}